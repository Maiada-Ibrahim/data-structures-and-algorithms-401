/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge;

import org.junit.jupiter.api.Test;

import java.util.HashMap;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @ Test
    void intersectionTest(){
        BinarySearchTree tree1 = new BinarySearchTree(300);
        tree1.Add(200);
        tree1.Add(250);

        BinarySearchTree tree2 = new BinarySearchTree(150);
        tree2.Add(200);
        tree2.Add(500);

        assertEquals("200", HashTable.intersection(tree1,tree2).get(1));

    }
    @Test
    void leftJoinsTest(){
        HashMap<String,String> map1= new HashMap<>();
        map1.put("fond","enammored");
        map1.put("wrath","anger");
        map1.put("diligent","employed");
        map1.put("outift","garb");
        map1.put("guide","usher");

        HashMap<String,String> map2= new HashMap<>();
        map2.put("fond","averse");
        map2.put("wrath","delight");
        map2.put("diligent","idel");
        map1.put("guide","follow");
        map1.put("flow","jam");


       assertEquals("[[diligent, employed, idel], [wrath, anger, delight], [outift, garb, Null], [guide, follow, Null], [flow, jam, Null], [fond, enammored, averse]]",Library.leftJoins(map1,map2).toString());

    }
}
